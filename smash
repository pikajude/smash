#!/bin/bash

if ! hash netcat 2>/dev/null; then
  echo >&2 "netcat not found; you need netcat >= 0.7.1 to smash."
  exit 1
fi

if (( $# < 1 )); then
  echo >&2 "Usage: $0 client_file.sh"
  exit 1
fi

INTERRUPTED=0
CONTENT_TYPE=
STATUS_CODE=
DIR=$(dirname $0)
LOGFILE="$DIR/log.txt"

LISTEN_PORT=4445

trap 'INTERRUPTED=1' INT

launch () {
  while [[ "$INTERRUPTED" != "1" ]]; do
    if ! netcat -l -p $LISTEN_PORT -e "$0 __magic__ $1"; then
      if [[ "$INTERRUPTED" == "1" ]]; then
        echo "goodbye!"
        exit 0
      else
        echo >&2 "smash exited with a nonzero status: $? (possibly an internal server error)"
        exit 1
      fi
    fi
  done
}

hecho () {
  echo -n "$@"
  echo -ne "\r\n"
}

parse_headers () {
  read header
  IFS=' ' read -ra REQ <<< "$header"
  _METHOD="${REQ[0]}"
  _PATH="${REQ[1]}"
  _VERSION="${REQ[2]#HTTP/}"
  _VERSION="${_VERSION:0:3}"
  _HEADERS=()
  while true; do
    read header
    if [[ "${#header}" == "1" ]]; then
      break
    fi
    len=$(expr "${#header}" - 1)
    header=${header:0:$len}
    _HEADERS+=("$header")
  done
}

header () {
  key="$1"
  for v in "${_HEADERS[@]}"; do
    if echo "$v" | grep -q "^${key}: "; then
      echo "${v#${key}: }"
      break
    fi
  done
}

status_to_text () {
  case $STATUS_CODE in
    200)
      echo -n "OK"
      ;;
    404)
      echo -n "Not Found"
      ;;
    500)
      echo -n "Internal Server Error"
      ;;
    *)
      echo >&2 "Unhandled status code $STATUS_CODE"
      exit 1
      ;;
  esac
}

content_type () {
  CONTENT_TYPE=$1
}

status_code () {
  STATUS_CODE=$1
}

send_headers () {
  resp="$1"
  hecho "HTTP/1.1 $STATUS_CODE $(status_to_text)"
  hecho "Date: $(date)"
  hecho "Content-Type: $CONTENT_TYPE"
  hecho "Content-Length: ${#resp}"
  hecho ""
}

send_response () {
  resp="$(echo "$1" | perl -pne 's/$/\r/')"
  send_headers "$resp"
  hecho "$resp"
  echo "[$(date)] \"${_METHOD} ${_PATH} HTTP/${_VERSION}\" ${STATUS_CODE} ${#resp} \"http://$(header "Host")$_PATH\" \"$(header "User-Agent")\"" >>$LOGFILE
  exit 0
}

send_response_eval () {
  resp="$(echo -e "$1")"
  send_response "$resp"
}

## readloop

if [[ "$1" == "__magic__" ]]; then
  source "$2"

  parse_headers

  content_type "text/plain"
  status_code 200

  respond
else
  echo "launching smash"
  launch $@
fi
